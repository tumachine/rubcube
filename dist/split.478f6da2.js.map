{"version":3,"sources":["lib/split/split.js","split.js"],"names":["global","window","document","addEventListener","removeEventListener","getBoundingClientRect","gutterStartDragging","aGutterSize","bGutterSize","HORIZONTAL","NOOP","isIE8","attachEvent","calc","filter","prefix","el","createElement","style","cssText","length","shift","isString","v","String","elementOrSelector","ele","querySelector","Error","getOption","options","propName","def","value","undefined","getGutterSize","gutterSize","isFirst","isLast","gutterAlign","defaultGutterFn","i","gutterDirection","gut","className","defaultElementStyleFn","dim","size","gutSize","defaultGutterStyleFn","Split","idsOption","ids","dimension","clientAxis","position","positionEnd","clientSize","elements","Array","from","firstElement","parent","parentNode","parentStyle","getComputedStyle","parentFlexDirection","flexDirection","sizes","map","minSize","minSizes","isArray","expandToMin","snapOffset","dragInterval","direction","cursor","gutter","elementStyle","gutterStyle","setElementSize","Object","keys","forEach","prop","setGutterSize","gutterElement","getSizes","element","getMousePosition","e","touches","adjust","offset","a","b","percentage","drag","dragging","start","dragOffset","Math","round","call","calculateSizes","aBounds","bBounds","end","innerSize","computedStyle","parseFloat","paddingLeft","paddingRight","paddingTop","paddingBottom","trimToMin","sizesToTrim","parentSize","reduce","excessPixels","toSpare","pixelSizes","pixelSize","elementGutterSize","elementMinSize","push","newPixelSize","takenPixels","min","stopDragging","self","stop","move","userSelect","webkitUserSelect","MozUserSelect","pointerEvents","body","startDragging","button","preventDefault","bind","pairs","id","pair","temp","insertBefore","adjustToMin","computedSize","setSizes","newSizes","trimmed","newSize","destroy","preserveStyles","preserveGutter","removeChild","collapse"],"mappings":"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","file":"split.478f6da2.js","sourceRoot":"..\\src","sourcesContent":["// The programming goals of Split.js are to deliver readable, understandable and\r\n// maintainable code, while at the same time manually optimizing for tiny minified file size,\r\n// browser compatibility without additional requirements, graceful fallback (IE8 is supported)\r\n// and very few assumptions about the user's page layout.\r\nconst global = window\r\nconst { document } = global\r\n\r\n// Save a couple long function names that are used frequently.\r\n// This optimization saves around 400 bytes.\r\nconst addEventListener = 'addEventListener'\r\nconst removeEventListener = 'removeEventListener'\r\nconst getBoundingClientRect = 'getBoundingClientRect'\r\nconst gutterStartDragging = '_a'\r\nconst aGutterSize = '_b'\r\nconst bGutterSize = '_c'\r\nconst HORIZONTAL = 'horizontal'\r\nconst NOOP = () => false\r\n\r\n// Figure out if we're in IE8 or not. IE8 will still render correctly,\r\n// but will be static instead of draggable.\r\nconst isIE8 = global.attachEvent && !global[addEventListener]\r\n\r\n// Helper function determines which prefixes of CSS calc we need.\r\n// We only need to do this once on startup, when this anonymous function is called.\r\n//\r\n// Tests -webkit, -moz and -o prefixes. Modified from StackOverflow:\r\n// http://stackoverflow.com/questions/16625140/js-feature-detection-to-detect-the-usage-of-webkit-calc-over-calc/16625167#16625167\r\nconst calc = `${['', '-webkit-', '-moz-', '-o-']\r\n    .filter(prefix => {\r\n        const el = document.createElement('div')\r\n        el.style.cssText = `width:${prefix}calc(9px)`\r\n\r\n        return !!el.style.length\r\n    })\r\n    .shift()}calc`\r\n\r\n// Helper function checks if its argument is a string-like type\r\nconst isString = v => typeof v === 'string' || v instanceof String\r\n\r\n// Helper function allows elements and string selectors to be used\r\n// interchangeably. In either case an element is returned. This allows us to\r\n// do `Split([elem1, elem2])` as well as `Split(['#id1', '#id2'])`.\r\nconst elementOrSelector = el => {\r\n    if (isString(el)) {\r\n        const ele = document.querySelector(el)\r\n        if (!ele) {\r\n            throw new Error(`Selector ${el} did not match a DOM element`)\r\n        }\r\n        return ele\r\n    }\r\n\r\n    return el\r\n}\r\n\r\n// Helper function gets a property from the properties object, with a default fallback\r\nconst getOption = (options, propName, def) => {\r\n    const value = options[propName]\r\n    if (value !== undefined) {\r\n        return value\r\n    }\r\n    return def\r\n}\r\n\r\nconst getGutterSize = (gutterSize, isFirst, isLast, gutterAlign) => {\r\n    if (isFirst) {\r\n        if (gutterAlign === 'end') {\r\n            return 0\r\n        }\r\n        if (gutterAlign === 'center') {\r\n            return gutterSize / 2\r\n        }\r\n    } else if (isLast) {\r\n        if (gutterAlign === 'start') {\r\n            return 0\r\n        }\r\n        if (gutterAlign === 'center') {\r\n            return gutterSize / 2\r\n        }\r\n    }\r\n\r\n    return gutterSize\r\n}\r\n\r\n// Default options\r\nconst defaultGutterFn = (i, gutterDirection) => {\r\n    const gut = document.createElement('div')\r\n    gut.className = `gutter gutter-${gutterDirection}`\r\n    return gut\r\n}\r\n\r\nconst defaultElementStyleFn = (dim, size, gutSize) => {\r\n    const style = {}\r\n\r\n    if (!isString(size)) {\r\n        if (!isIE8) {\r\n            style[dim] = `${calc}(${size}% - ${gutSize}px)`\r\n        } else {\r\n            style[dim] = `${size}%`\r\n        }\r\n    } else {\r\n        style[dim] = size\r\n    }\r\n\r\n    return style\r\n}\r\n\r\nconst defaultGutterStyleFn = (dim, gutSize) => ({ [dim]: `${gutSize}px` })\r\n\r\n// The main function to initialize a split. Split.js thinks about each pair\r\n// of elements as an independant pair. Dragging the gutter between two elements\r\n// only changes the dimensions of elements in that pair. This is key to understanding\r\n// how the following functions operate, since each function is bound to a pair.\r\n//\r\n// A pair object is shaped like this:\r\n//\r\n// {\r\n//     a: DOM element,\r\n//     b: DOM element,\r\n//     aMin: Number,\r\n//     bMin: Number,\r\n//     dragging: Boolean,\r\n//     parent: DOM element,\r\n//     direction: 'horizontal' | 'vertical'\r\n// }\r\n//\r\n// The basic sequence:\r\n//\r\n// 1. Set defaults to something sane. `options` doesn't have to be passed at all.\r\n// 2. Initialize a bunch of strings based on the direction we're splitting.\r\n//    A lot of the behavior in the rest of the library is paramatized down to\r\n//    rely on CSS strings and classes.\r\n// 3. Define the dragging helper functions, and a few helpers to go with them.\r\n// 4. Loop through the elements while pairing them off. Every pair gets an\r\n//    `pair` object and a gutter.\r\n// 5. Actually size the pair elements, insert gutters and attach event listeners.\r\nconst Split = (idsOption, options = {}) => {\r\n    let ids = idsOption\r\n    let dimension\r\n    let clientAxis\r\n    let position\r\n    let positionEnd\r\n    let clientSize\r\n    let elements\r\n\r\n    // Allow HTMLCollection to be used as an argument when supported\r\n    if (Array.from) {\r\n        ids = Array.from(ids)\r\n    }\r\n\r\n    // All DOM elements in the split should have a common parent. We can grab\r\n    // the first elements parent and hope users read the docs because the\r\n    // behavior will be whacky otherwise.\r\n    const firstElement = elementOrSelector(ids[0])\r\n    const parent = firstElement.parentNode\r\n    const parentStyle = getComputedStyle ? getComputedStyle(parent) : null\r\n    const parentFlexDirection = parentStyle ? parentStyle.flexDirection : null\r\n\r\n    // Set default options.sizes to equal percentages of the parent element.\r\n    let sizes = getOption(options, 'sizes') || ids.map(() => 100 / ids.length)\r\n\r\n    // Standardize minSize to an array if it isn't already. This allows minSize\r\n    // to be passed as a number.\r\n    const minSize = getOption(options, 'minSize', 100)\r\n    const minSizes = Array.isArray(minSize) ? minSize : ids.map(() => minSize)\r\n\r\n    // Get other options\r\n    const expandToMin = getOption(options, 'expandToMin', false)\r\n    const gutterSize = getOption(options, 'gutterSize', 10)\r\n    const gutterAlign = getOption(options, 'gutterAlign', 'center')\r\n    const snapOffset = getOption(options, 'snapOffset', 30)\r\n    const dragInterval = getOption(options, 'dragInterval', 1)\r\n    const direction = getOption(options, 'direction', HORIZONTAL)\r\n    const cursor = getOption(\r\n        options,\r\n        'cursor',\r\n        direction === HORIZONTAL ? 'col-resize' : 'row-resize',\r\n    )\r\n    const gutter = getOption(options, 'gutter', defaultGutterFn)\r\n    const elementStyle = getOption(\r\n        options,\r\n        'elementStyle',\r\n        defaultElementStyleFn,\r\n    )\r\n    const gutterStyle = getOption(options, 'gutterStyle', defaultGutterStyleFn)\r\n\r\n    // 2. Initialize a bunch of strings based on the direction we're splitting.\r\n    // A lot of the behavior in the rest of the library is paramatized down to\r\n    // rely on CSS strings and classes.\r\n    if (direction === HORIZONTAL) {\r\n        dimension = 'width'\r\n        clientAxis = 'clientX'\r\n        position = 'left'\r\n        positionEnd = 'right'\r\n        clientSize = 'clientWidth'\r\n    } else if (direction === 'vertical') {\r\n        dimension = 'height'\r\n        clientAxis = 'clientY'\r\n        position = 'top'\r\n        positionEnd = 'bottom'\r\n        clientSize = 'clientHeight'\r\n    }\r\n\r\n    // 3. Define the dragging helper functions, and a few helpers to go with them.\r\n    // Each helper is bound to a pair object that contains its metadata. This\r\n    // also makes it easy to store references to listeners that that will be\r\n    // added and removed.\r\n    //\r\n    // Even though there are no other functions contained in them, aliasing\r\n    // this to self saves 50 bytes or so since it's used so frequently.\r\n    //\r\n    // The pair object saves metadata like dragging state, position and\r\n    // event listener references.\r\n\r\n    function setElementSize(el, size, gutSize, i) {\r\n        // Split.js allows setting sizes via numbers (ideally), or if you must,\r\n        // by string, like '300px'. This is less than ideal, because it breaks\r\n        // the fluid layout that `calc(% - px)` provides. You're on your own if you do that,\r\n        // make sure you calculate the gutter size by hand.\r\n        const style = elementStyle(dimension, size, gutSize, i)\r\n\r\n        Object.keys(style).forEach(prop => {\r\n            // eslint-disable-next-line no-param-reassign\r\n            el.style[prop] = style[prop]\r\n        })\r\n    }\r\n\r\n    function setGutterSize(gutterElement, gutSize, i) {\r\n        const style = gutterStyle(dimension, gutSize, i)\r\n\r\n        Object.keys(style).forEach(prop => {\r\n            // eslint-disable-next-line no-param-reassign\r\n            gutterElement.style[prop] = style[prop]\r\n        })\r\n    }\r\n\r\n    function getSizes() {\r\n        return elements.map(element => element.size)\r\n    }\r\n\r\n    // Supports touch events, but not multitouch, so only the first\r\n    // finger `touches[0]` is counted.\r\n    function getMousePosition(e) {\r\n        if ('touches' in e) return e.touches[0][clientAxis]\r\n        return e[clientAxis]\r\n    }\r\n\r\n    // Actually adjust the size of elements `a` and `b` to `offset` while dragging.\r\n    // calc is used to allow calc(percentage + gutterpx) on the whole split instance,\r\n    // which allows the viewport to be resized without additional logic.\r\n    // Element a's size is the same as offset. b's size is total size - a size.\r\n    // Both sizes are calculated from the initial parent percentage,\r\n    // then the gutter size is subtracted.\r\n    function adjust(offset) {\r\n        const a = elements[this.a]\r\n        const b = elements[this.b]\r\n        const percentage = a.size + b.size\r\n\r\n        a.size = (offset / this.size) * percentage\r\n        b.size = percentage - (offset / this.size) * percentage\r\n\r\n        setElementSize(a.element, a.size, this[aGutterSize], a.i)\r\n        setElementSize(b.element, b.size, this[bGutterSize], b.i)\r\n    }\r\n\r\n    // drag, where all the magic happens. The logic is really quite simple:\r\n    //\r\n    // 1. Ignore if the pair is not dragging.\r\n    // 2. Get the offset of the event.\r\n    // 3. Snap offset to min if within snappable range (within min + snapOffset).\r\n    // 4. Actually adjust each element in the pair to offset.\r\n    //\r\n    // ---------------------------------------------------------------------\r\n    // |    | <- a.minSize               ||              b.minSize -> |    |\r\n    // |    |  | <- this.snapOffset      ||     this.snapOffset -> |  |    |\r\n    // |    |  |                         ||                        |  |    |\r\n    // |    |  |                         ||                        |  |    |\r\n    // ---------------------------------------------------------------------\r\n    // | <- this.start                                        this.size -> |\r\n    function drag(e) {\r\n        let offset\r\n        const a = elements[this.a]\r\n        const b = elements[this.b]\r\n\r\n        if (!this.dragging) return\r\n\r\n        // Get the offset of the event from the first side of the\r\n        // pair `this.start`. Then offset by the initial position of the\r\n        // mouse compared to the gutter size.\r\n        offset =\r\n            getMousePosition(e) -\r\n            this.start +\r\n            (this[aGutterSize] - this.dragOffset)\r\n\r\n        if (dragInterval > 1) {\r\n            offset = Math.round(offset / dragInterval) * dragInterval\r\n        }\r\n\r\n        // If within snapOffset of min or max, set offset to min or max.\r\n        // snapOffset buffers a.minSize and b.minSize, so logic is opposite for both.\r\n        // Include the appropriate gutter sizes to prevent overflows.\r\n        if (offset <= a.minSize + snapOffset + this[aGutterSize]) {\r\n            offset = a.minSize + this[aGutterSize]\r\n        } else if (\r\n            offset >=\r\n            this.size - (b.minSize + snapOffset + this[bGutterSize])\r\n        ) {\r\n            offset = this.size - (b.minSize + this[bGutterSize])\r\n        }\r\n\r\n        // Actually adjust the size.\r\n        adjust.call(this, offset)\r\n\r\n        // Call the drag callback continously. Don't do anything too intensive\r\n        // in this callback.\r\n        getOption(options, 'onDrag', NOOP)()\r\n    }\r\n\r\n    // Cache some important sizes when drag starts, so we don't have to do that\r\n    // continously:\r\n    //\r\n    // `size`: The total size of the pair. First + second + first gutter + second gutter.\r\n    // `start`: The leading side of the first element.\r\n    //\r\n    // ------------------------------------------------\r\n    // |      aGutterSize -> |||                      |\r\n    // |                     |||                      |\r\n    // |                     |||                      |\r\n    // |                     ||| <- bGutterSize       |\r\n    // ------------------------------------------------\r\n    // | <- start                             size -> |\r\n    function calculateSizes() {\r\n        // Figure out the parent size minus padding.\r\n        const a = elements[this.a].element\r\n        const b = elements[this.b].element\r\n\r\n        const aBounds = a[getBoundingClientRect]()\r\n        const bBounds = b[getBoundingClientRect]()\r\n\r\n        this.size =\r\n            aBounds[dimension] +\r\n            bBounds[dimension] +\r\n            this[aGutterSize] +\r\n            this[bGutterSize]\r\n        this.start = aBounds[position]\r\n        this.end = aBounds[positionEnd]\r\n    }\r\n\r\n    function innerSize(element) {\r\n        // Return nothing if getComputedStyle is not supported (< IE9)\r\n        // Or if parent element has no layout yet\r\n        if (!getComputedStyle) return null\r\n\r\n        const computedStyle = getComputedStyle(element)\r\n\r\n        if (!computedStyle) return null\r\n\r\n        let size = element[clientSize]\r\n\r\n        if (size === 0) return null\r\n\r\n        if (direction === HORIZONTAL) {\r\n            size -=\r\n                parseFloat(computedStyle.paddingLeft) +\r\n                parseFloat(computedStyle.paddingRight)\r\n        } else {\r\n            size -=\r\n                parseFloat(computedStyle.paddingTop) +\r\n                parseFloat(computedStyle.paddingBottom)\r\n        }\r\n\r\n        return size\r\n    }\r\n\r\n    // When specifying percentage sizes that are less than the computed\r\n    // size of the element minus the gutter, the lesser percentages must be increased\r\n    // (and decreased from the other elements) to make space for the pixels\r\n    // subtracted by the gutters.\r\n    function trimToMin(sizesToTrim) {\r\n        // Try to get inner size of parent element.\r\n        // If it's no supported, return original sizes.\r\n        const parentSize = innerSize(parent)\r\n        if (parentSize === null) {\r\n            return sizesToTrim\r\n        }\r\n\r\n        if (minSizes.reduce((a, b) => a + b, 0) > parentSize) {\r\n            return sizesToTrim\r\n        }\r\n\r\n        // Keep track of the excess pixels, the amount of pixels over the desired percentage\r\n        // Also keep track of the elements with pixels to spare, to decrease after if needed\r\n        let excessPixels = 0\r\n        const toSpare = []\r\n\r\n        const pixelSizes = sizesToTrim.map((size, i) => {\r\n            // Convert requested percentages to pixel sizes\r\n            const pixelSize = (parentSize * size) / 100\r\n            const elementGutterSize = getGutterSize(\r\n                gutterSize,\r\n                i === 0,\r\n                i === sizesToTrim.length - 1,\r\n                gutterAlign,\r\n            )\r\n            const elementMinSize = minSizes[i] + elementGutterSize\r\n\r\n            // If element is too smal, increase excess pixels by the difference\r\n            // and mark that it has no pixels to spare\r\n            if (pixelSize < elementMinSize) {\r\n                excessPixels += elementMinSize - pixelSize\r\n                toSpare.push(0)\r\n                return elementMinSize\r\n            }\r\n\r\n            // Otherwise, mark the pixels it has to spare and return it's original size\r\n            toSpare.push(pixelSize - elementMinSize)\r\n            return pixelSize\r\n        })\r\n\r\n        // If nothing was adjusted, return the original sizes\r\n        if (excessPixels === 0) {\r\n            return sizesToTrim\r\n        }\r\n\r\n        return pixelSizes.map((pixelSize, i) => {\r\n            let newPixelSize = pixelSize\r\n\r\n            // While there's still pixels to take, and there's enough pixels to spare,\r\n            // take as many as possible up to the total excess pixels\r\n            if (excessPixels > 0 && toSpare[i] - excessPixels > 0) {\r\n                const takenPixels = Math.min(\r\n                    excessPixels,\r\n                    toSpare[i] - excessPixels,\r\n                )\r\n\r\n                // Subtract the amount taken for the next iteration\r\n                excessPixels -= takenPixels\r\n                newPixelSize = pixelSize - takenPixels\r\n            }\r\n\r\n            // Return the pixel size adjusted as a percentage\r\n            return (newPixelSize / parentSize) * 100\r\n        })\r\n    }\r\n\r\n    // stopDragging is very similar to startDragging in reverse.\r\n    function stopDragging() {\r\n        const self = this\r\n        const a = elements[self.a].element\r\n        const b = elements[self.b].element\r\n\r\n        if (self.dragging) {\r\n            getOption(options, 'onDragEnd', NOOP)(getSizes())\r\n        }\r\n\r\n        self.dragging = false\r\n\r\n        // Remove the stored event listeners. This is why we store them.\r\n        global[removeEventListener]('mouseup', self.stop)\r\n        global[removeEventListener]('touchend', self.stop)\r\n        global[removeEventListener]('touchcancel', self.stop)\r\n        global[removeEventListener]('mousemove', self.move)\r\n        global[removeEventListener]('touchmove', self.move)\r\n\r\n        // Clear bound function references\r\n        self.stop = null\r\n        self.move = null\r\n\r\n        a[removeEventListener]('selectstart', NOOP)\r\n        a[removeEventListener]('dragstart', NOOP)\r\n        b[removeEventListener]('selectstart', NOOP)\r\n        b[removeEventListener]('dragstart', NOOP)\r\n\r\n        a.style.userSelect = ''\r\n        a.style.webkitUserSelect = ''\r\n        a.style.MozUserSelect = ''\r\n        a.style.pointerEvents = ''\r\n\r\n        b.style.userSelect = ''\r\n        b.style.webkitUserSelect = ''\r\n        b.style.MozUserSelect = ''\r\n        b.style.pointerEvents = ''\r\n\r\n        self.gutter.style.cursor = ''\r\n        self.parent.style.cursor = ''\r\n        document.body.style.cursor = ''\r\n    }\r\n\r\n    // startDragging calls `calculateSizes` to store the inital size in the pair object.\r\n    // It also adds event listeners for mouse/touch events,\r\n    // and prevents selection while dragging so avoid the selecting text.\r\n    function startDragging(e) {\r\n        // Right-clicking can't start dragging.\r\n        if ('button' in e && e.button !== 0) {\r\n            return\r\n        }\r\n\r\n        // Alias frequently used variables to save space. 200 bytes.\r\n        const self = this\r\n        const a = elements[self.a].element\r\n        const b = elements[self.b].element\r\n\r\n        // Call the onDragStart callback.\r\n        if (!self.dragging) {\r\n            getOption(options, 'onDragStart', NOOP)(getSizes())\r\n        }\r\n\r\n        // Don't actually drag the element. We emulate that in the drag function.\r\n        e.preventDefault()\r\n\r\n        // Set the dragging property of the pair object.\r\n        self.dragging = true\r\n\r\n        // Create two event listeners bound to the same pair object and store\r\n        // them in the pair object.\r\n        self.move = drag.bind(self)\r\n        self.stop = stopDragging.bind(self)\r\n\r\n        // All the binding. `window` gets the stop events in case we drag out of the elements.\r\n        global[addEventListener]('mouseup', self.stop)\r\n        global[addEventListener]('touchend', self.stop)\r\n        global[addEventListener]('touchcancel', self.stop)\r\n        global[addEventListener]('mousemove', self.move)\r\n        global[addEventListener]('touchmove', self.move)\r\n\r\n        // Disable selection. Disable!\r\n        a[addEventListener]('selectstart', NOOP)\r\n        a[addEventListener]('dragstart', NOOP)\r\n        b[addEventListener]('selectstart', NOOP)\r\n        b[addEventListener]('dragstart', NOOP)\r\n\r\n        a.style.userSelect = 'none'\r\n        a.style.webkitUserSelect = 'none'\r\n        a.style.MozUserSelect = 'none'\r\n        a.style.pointerEvents = 'none'\r\n\r\n        b.style.userSelect = 'none'\r\n        b.style.webkitUserSelect = 'none'\r\n        b.style.MozUserSelect = 'none'\r\n        b.style.pointerEvents = 'none'\r\n\r\n        // Set the cursor at multiple levels\r\n        self.gutter.style.cursor = cursor\r\n        self.parent.style.cursor = cursor\r\n        document.body.style.cursor = cursor\r\n\r\n        // Cache the initial sizes of the pair.\r\n        calculateSizes.call(self)\r\n\r\n        // Determine the position of the mouse compared to the gutter\r\n        self.dragOffset = getMousePosition(e) - self.end\r\n    }\r\n\r\n    // adjust sizes to ensure percentage is within min size and gutter.\r\n    sizes = trimToMin(sizes)\r\n\r\n    // 5. Create pair and element objects. Each pair has an index reference to\r\n    // elements `a` and `b` of the pair (first and second elements).\r\n    // Loop through the elements while pairing them off. Every pair gets a\r\n    // `pair` object and a gutter.\r\n    //\r\n    // Basic logic:\r\n    //\r\n    // - Starting with the second element `i > 0`, create `pair` objects with\r\n    //   `a = i - 1` and `b = i`\r\n    // - Set gutter sizes based on the _pair_ being first/last. The first and last\r\n    //   pair have gutterSize / 2, since they only have one half gutter, and not two.\r\n    // - Create gutter elements and add event listeners.\r\n    // - Set the size of the elements, minus the gutter sizes.\r\n    //\r\n    // -----------------------------------------------------------------------\r\n    // |     i=0     |         i=1         |        i=2       |      i=3     |\r\n    // |             |                     |                  |              |\r\n    // |           pair 0                pair 1             pair 2           |\r\n    // |             |                     |                  |              |\r\n    // -----------------------------------------------------------------------\r\n    const pairs = []\r\n    elements = ids.map((id, i) => {\r\n        // Create the element object.\r\n        const element = {\r\n            element: elementOrSelector(id),\r\n            size: sizes[i],\r\n            minSize: minSizes[i],\r\n            i,\r\n        }\r\n\r\n        let pair\r\n\r\n        if (i > 0) {\r\n            // Create the pair object with its metadata.\r\n            pair = {\r\n                a: i - 1,\r\n                b: i,\r\n                dragging: false,\r\n                direction,\r\n                parent,\r\n            }\r\n\r\n            pair[aGutterSize] = getGutterSize(\r\n                gutterSize,\r\n                i - 1 === 0,\r\n                false,\r\n                gutterAlign,\r\n            )\r\n            pair[bGutterSize] = getGutterSize(\r\n                gutterSize,\r\n                false,\r\n                i === ids.length - 1,\r\n                gutterAlign,\r\n            )\r\n\r\n            // if the parent has a reverse flex-direction, switch the pair elements.\r\n            if (\r\n                parentFlexDirection === 'row-reverse' ||\r\n                parentFlexDirection === 'column-reverse'\r\n            ) {\r\n                const temp = pair.a\r\n                pair.a = pair.b\r\n                pair.b = temp\r\n            }\r\n        }\r\n\r\n        // Determine the size of the current element. IE8 is supported by\r\n        // staticly assigning sizes without draggable gutters. Assigns a string\r\n        // to `size`.\r\n        //\r\n        // IE9 and above\r\n        if (!isIE8) {\r\n            // Create gutter elements for each pair.\r\n            if (i > 0) {\r\n                const gutterElement = gutter(i, direction, element.element)\r\n                setGutterSize(gutterElement, gutterSize, i)\r\n\r\n                // Save bound event listener for removal later\r\n                pair[gutterStartDragging] = startDragging.bind(pair)\r\n\r\n                // Attach bound event listener\r\n                gutterElement[addEventListener](\r\n                    'mousedown',\r\n                    pair[gutterStartDragging],\r\n                )\r\n                gutterElement[addEventListener](\r\n                    'touchstart',\r\n                    pair[gutterStartDragging],\r\n                )\r\n\r\n                parent.insertBefore(gutterElement, element.element)\r\n\r\n                pair.gutter = gutterElement\r\n            }\r\n        }\r\n\r\n        setElementSize(\r\n            element.element,\r\n            element.size,\r\n            getGutterSize(\r\n                gutterSize,\r\n                i === 0,\r\n                i === ids.length - 1,\r\n                gutterAlign,\r\n            ),\r\n            i,\r\n        )\r\n\r\n        // After the first iteration, and we have a pair object, append it to the\r\n        // list of pairs.\r\n        if (i > 0) {\r\n            pairs.push(pair)\r\n        }\r\n\r\n        return element\r\n    })\r\n\r\n    function adjustToMin(element) {\r\n        const isLast = element.i === pairs.length\r\n        const pair = isLast ? pairs[element.i - 1] : pairs[element.i]\r\n\r\n        calculateSizes.call(pair)\r\n\r\n        const size = isLast\r\n            ? pair.size - element.minSize - pair[bGutterSize]\r\n            : element.minSize + pair[aGutterSize]\r\n\r\n        adjust.call(pair, size)\r\n    }\r\n\r\n    elements.forEach(element => {\r\n        const computedSize = element.element[getBoundingClientRect]()[dimension]\r\n\r\n        if (computedSize < element.minSize) {\r\n            if (expandToMin) {\r\n                adjustToMin(element)\r\n            } else {\r\n                // eslint-disable-next-line no-param-reassign\r\n                element.minSize = computedSize\r\n            }\r\n        }\r\n    })\r\n\r\n    function setSizes(newSizes) {\r\n        const trimmed = trimToMin(newSizes)\r\n        trimmed.forEach((newSize, i) => {\r\n            if (i > 0) {\r\n                const pair = pairs[i - 1]\r\n\r\n                const a = elements[pair.a]\r\n                const b = elements[pair.b]\r\n\r\n                a.size = trimmed[i - 1]\r\n                b.size = newSize\r\n\r\n                setElementSize(a.element, a.size, pair[aGutterSize], a.i)\r\n                setElementSize(b.element, b.size, pair[bGutterSize], b.i)\r\n            }\r\n        })\r\n    }\r\n\r\n    function destroy(preserveStyles, preserveGutter) {\r\n        pairs.forEach(pair => {\r\n            if (preserveGutter !== true) {\r\n                pair.parent.removeChild(pair.gutter)\r\n            } else {\r\n                pair.gutter[removeEventListener](\r\n                    'mousedown',\r\n                    pair[gutterStartDragging],\r\n                )\r\n                pair.gutter[removeEventListener](\r\n                    'touchstart',\r\n                    pair[gutterStartDragging],\r\n                )\r\n            }\r\n\r\n            if (preserveStyles !== true) {\r\n                const style = elementStyle(\r\n                    dimension,\r\n                    pair.a.size,\r\n                    pair[aGutterSize],\r\n                )\r\n\r\n                Object.keys(style).forEach(prop => {\r\n                    elements[pair.a].element.style[prop] = ''\r\n                    elements[pair.b].element.style[prop] = ''\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    if (isIE8) {\r\n        return {\r\n            setSizes,\r\n            destroy,\r\n        }\r\n    }\r\n\r\n    return {\r\n        setSizes,\r\n        getSizes,\r\n        collapse(i) {\r\n            adjustToMin(elements[i])\r\n        },\r\n        destroy,\r\n        parent,\r\n        pairs,\r\n    }\r\n}\r\n\r\nexport default Split\r\n","// Three.js - Responsive Editor\r\n// from https://threejsfundamentals.org/threejs/threejs-responsive-editor.html\r\n\r\nimport Split from './lib/split/split';\r\n\r\n/* global Split */\r\n\r\n// This code is only related to handling the split.\r\n// Our three.js code has not changed\r\nSplit(['#view', '#controls'], { // eslint-disable-line new-cap\r\n  sizes: [75, 25],\r\n  minSize: 100,\r\n  elementStyle: (dimension, size, gutterSize) => ({\r\n    'flex-basis': `calc(${size}% - ${gutterSize}px)`,\r\n  }),\r\n  gutterStyle: (dimension, gutterSize) => ({\r\n    'flex-basis': `${gutterSize}px`,\r\n  }),\r\n});\r\n"]}